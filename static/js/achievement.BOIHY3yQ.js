import{Q as f,l as u}from"./vue.BvTOQNwI.js";import{u as v}from"./ProgressBar.Smnf-aHg.js";import{u as h}from"./game.CxZyzCUV.js";const A=f("achievement",()=>{const s=u([]),i=v(),n=h(),c=()=>{const r=localStorage.getItem("achievements");r?s.value=JSON.parse(r):(s.value=[{id:1,title:"初次见面",description:"完成第一次单词学习",icon:"smile-o",unlocked:!1,progress:0,progressMax:1,reward:"获得一个小星星",isNew:!1},{id:2,title:"单词小能手",description:"掌握10个单词",icon:"star-o",unlocked:!1,progress:0,progressMax:10,reward:"解锁新主题",isNew:!1},{id:3,title:"单词大师",description:"掌握30个单词",icon:"medal-o",unlocked:!1,progress:0,progressMax:30,reward:"解锁特殊关卡",isNew:!1},{id:4,title:"连续学习",description:"连续3天学习单词",icon:"fire-o",unlocked:!1,progress:0,progressMax:3,reward:"获得额外生命值",isNew:!1},{id:5,title:"闯关小英雄",description:"完成5个关卡",icon:"flag-o",unlocked:!1,progress:0,progressMax:5,reward:"解锁新角色",isNew:!1},{id:6,title:"全三星通关",description:"获得3个关卡的三星评价",icon:"gem-o",unlocked:!1,progress:0,progressMax:3,reward:"获得特殊徽章",isNew:!1},{id:7,title:"动物专家",description:"掌握所有动物类单词",icon:"cat-o",unlocked:!1,progress:0,progressMax:10,reward:"解锁动物主题",isNew:!1},{id:8,title:"水果达人",description:"掌握所有水果类单词",icon:"apple-o",unlocked:!1,progress:0,progressMax:8,reward:"解锁水果主题",isNew:!1}],localStorage.setItem("achievements",JSON.stringify(s.value)))},d=()=>{const r=i.masteredWords.length,a=n.levels.filter(t=>t.isCompleted).length,l=n.levels.filter(t=>t.stars===3).length;s.value=s.value.map(t=>{let e={...t};switch(t.id){case 1:e.progress=i.learnedWords.length>0?1:0;break;case 2:e.progress=Math.min(r,10);break;case 3:e.progress=Math.min(r,30);break;case 4:break;case 5:e.progress=Math.min(a,5);break;case 6:e.progress=Math.min(l,3);break;case 7:const m=i.words.filter(o=>o.id<=10&&o.isMastered).length;e.progress=m;break;case 8:const p=i.words.filter(o=>o.id>=11&&o.id<=18&&o.isMastered).length;e.progress=p;break}return!e.unlocked&&e.progress>=e.progressMax&&(e.unlocked=!0,e.unlockTime=Date.now(),e.isNew=!0,g(e)),e}),localStorage.setItem("achievements",JSON.stringify(s.value))},g=r=>{`${r.title}`};return{achievements:s,initAchievements:c,updateAchievements:d,markAchievementAsRead:r=>{const a=s.value.findIndex(l=>l.id===r);a!==-1&&(s.value[a].isNew=!1,localStorage.setItem("achievements",JSON.stringify(s.value)))},getNewAchievements:()=>s.value.filter(r=>r.isNew)}});export{A as u};
